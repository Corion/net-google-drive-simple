######################################################################
    Net::Google::Drive::Simple 0.01
######################################################################

NAME
    Net::Google::Drive::Simple - Simple modification of Google Drive data

SYNOPSIS
        use Net::Google::Drive::Simple;

          # requires a ~/.google-drive.yml file with an access token, 
          # see description below.
        my $gd = Net::Google::Drive::Simple->new();

        my $children = $gd->children( "/folder/path" );

        for my $child ( @$children ) {

            next if $child->kind() ne 'drive#file';

            next if !$child->can( "downloadUrl" );

            print $child->originalFilename(), 
                  " can be downloaded at ",
                  $child->downloadUrl(), 
                  "\n";
        }

DESCRIPTION
    Net::Google::Drive::Simple authenticates with a user's Google Drive and
    offers several convenience methods to list, retrieve, and modify the
    data stored in the cloud.

  GETTING STARTED
    To get the access token required to access your Google Drive data via
    this module, you need to run the script "eg/google-drive-init" in this
    distribution. This script starts a web server on port 8082 on your local
    machine. When you point your browser at http://localhost:8082, you'll
    see a link that will lead you to Google Drive's login page, where you
    authenticate and then allow the app (specified by client_id and
    client_secret below) access to your Google Drive data. The script will
    then receive an access token from Google Drive and store it in
    ~/.google-drive.yml from where other scripts can pick it up and work on
    the data stored on the user's Google Drive account. Note that you need
    to obtain client_id and a client_secret below from
    https://developers.google.com/drive before you can use this script.

METHODS
    "new()"
        Constructor, creates a helper object to retrieve Google Drive data
        later. Takes an optional name of the ".google-drive.yml" file

            my $gd = Net::Google::Drive::Simple->new(
                config_file => "gd.yml",
            );

        or uses "~/.google-drive.yml" in the user's home directory as
        default.

    "my $children = $gd-$<gt"children( "/path/to" )>
        Return the entries under a given path on the Google Drive as a
        reference to an array. Each entry is an object composed of the JSON
        data returned by the Google Drive API. Each object offers methods
        named like the fields in the JSON data, e.g. "originalFilename()",
        "downloadUrl", etc.

        Will return all entries found unless "maxResults" is set:

            my $children = $gd->children( "/path/to", { maxResults => 3 } )

    "my $files = $gd-$<gt"files( )>
        Return all files on the drive as a reference to an array. Will
        return all entries found unless "maxResults" is set:

            my $files = $gd->files( "/path/to", { maxResults => 3 } )

        Note that Google limits the number of entries returned by default to
        100, and seems to restrict the maximum number of files returned by a
        single query to 3,500, even if you specify higher values for
        "maxResults".

LOGGING/DEBUGGING
    Net::Google::Drive::Simple is Log4perl-enabled. To find out what's going
    on under the hood, turn on Log4perl:

        use Log::Log4perl qw(:easy);
        Log::Log4perl->easy_init($DEBUG);

LEGALESE
    Copyright 2012 by Mike Schilli, all rights reserved. This program is
    free software, you can redistribute it and/or modify it under the same
    terms as Perl itself.

AUTHOR
    2012, Mike Schilli <cpan@perlmeister.com>

POD ERRORS
    Hey! The above document had some coding errors, which are explained
    below:

    Around line 373:
        =back without =over

